#include <array>
#include <cstdlib>
#include <iostream>

const bool BLOCKS[7][4][4][4] = // [type][orientation][y][x]
{
	{{{0, 0, 0, 0},
	  {1, 1, 1, 1},
	  {0, 0, 0, 0},
	  {0, 0, 0, 0}},
	 {{0, 0, 1, 0},
	  {0, 0, 1, 0},
	  {0, 0, 1, 0},
	  {0, 0, 1, 0}},
	 {{0, 0, 0, 0},
	  {0, 0, 0, 0},
	  {1, 1, 1, 1},
	  {0, 0, 0, 0}},
	 {{0, 1, 0, 0},
	  {0, 1, 0, 0},
	  {0, 1, 0, 0},
	  {0, 1, 0, 0}}},
 
	{{{1, 0, 0, 0},
	  {1, 1, 1, 0},
	  {0, 0, 0, 0},
	  {0, 0, 0, 0}},
	 {{0, 1, 1, 0},
	  {0, 1, 0, 0},
	  {0, 1, 0, 0},
	  {0, 0, 0, 0}},
	 {{0, 0, 0, 0},
	  {1, 1, 1, 0},
	  {0, 0, 1, 0},
	  {0, 0, 0, 0}},
	 {{0, 1, 0, 0},
	  {0, 1, 0, 0},
	  {1, 1, 0, 0},
	  {0, 0, 0, 0}}},
	  
	{{{0, 1, 0, 0},
	  {1, 1, 1, 0},
	  {0, 0, 0, 0},
	  {0, 0, 0, 0}},
	 {{0, 1, 0, 0},
	  {0, 1, 1, 0},
	  {0, 1, 0, 0},
	  {0, 0, 0, 0}},
	 {{0, 0, 0, 0},
	  {1, 1, 1, 0},
	  {0, 1, 0, 0},
	  {0, 0, 0, 0}},
	 {{0, 1, 0, 0},
	  {1, 1, 0, 0},
	  {0, 1, 0, 0},
	  {0, 0, 0, 0}}},
	  
	{{{0, 0, 1, 0},
	  {1, 1, 1, 0},
	  {0, 0, 0, 0},
	  {0, 0, 0, 0}},
	 {{0, 1, 0, 0},
	  {0, 1, 0, 0},
	  {0, 1, 1, 0},
	  {0, 0, 0, 0}},
	 {{0, 0, 0, 0},
	  {1, 1, 1, 0},
	  {1, 0, 0, 0},
	  {0, 0, 0, 0}},
	 {{1, 1, 0, 0},
	  {0, 1, 0, 0},
	  {0, 1, 0, 0},
	  {0, 0, 0, 0}}},

	{{{0, 1, 1, 0},
	  {1, 1, 0, 0},
	  {0, 0, 0, 0},
	  {0, 0, 0, 0}},
	 {{0, 1, 0, 0},
	  {0, 1, 1, 0},
	  {0, 0, 1, 0},
	  {0, 0, 0, 0}},
	 {{0, 0, 0, 0},
	  {0, 1, 1, 0},
	  {1, 1, 0, 0},
	  {0, 0, 0, 0}},
	 {{1, 0, 0, 0},
	  {1, 1, 0, 0},
	  {0, 1, 0, 0},
	  {0, 0, 0, 0}}},
	  
	{{{1, 1, 0, 0},
	  {0, 1, 1, 0},
	  {0, 0, 0, 0},
	  {0, 0, 0, 0}},
	 {{0, 0, 1, 0},
	  {0, 1, 1, 0},
	  {0, 1, 0, 0},
	  {0, 0, 0, 0}},
	 {{0, 0, 0, 0},
	  {1, 1, 0, 0},
	  {0, 1, 1, 0},
	  {0, 0, 0, 0}},
	 {{0, 1, 0, 0},
	  {1, 1, 0, 0},
	  {1, 0, 0, 0},
	  {0, 0, 0, 0}}},
	  
	{{{0, 0, 0, 0},
	  {0, 1, 1, 0},
	  {0, 1, 1, 0},
	  {0, 0, 0, 0}},
	 {{0, 0, 0, 0},
	  {0, 1, 1, 0},
	  {0, 1, 1, 0},
	  {0, 0, 0, 0}},
	 {{0, 0, 0, 0},
	  {0, 1, 1, 0},
	  {0, 1, 1, 0},
	  {0, 0, 0, 0}},
	 {{0, 0, 0, 0},
	  {0, 1, 1, 0},
	  {0, 1, 1, 0},
	  {0, 0, 0, 0}}}
};
	  
class Block{
	std::array<std::array<bool, 4>, 4> shape; // shape[y][x] 0 is top left
	int type; //0 - 6
	int orientation = 0; //0 - 3
	std::pair<int, int> position; // position of top left corner of 4x4 block shape 
								  // position.first - y-coord, position.second - x-coord
	
	public:
	Block();
	void rotate_right();
	void rotate_left();
	std::array<std::array<bool, 4>, 4> get_shape();
	void move_right();
	void move_left();
	void move_down();
	void move_up();
	int get_y();
	int get_x();
};
